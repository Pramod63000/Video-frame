import numpy as np
import cv2
import matplotlib.pyplot as plt 

VFILE = "cpp_mp.mp4"
def get_frames(filename):
    video = cv2.VideoCapture(filename)
    while video.isOpened():
        ret, frame = video.read()
        if ret:
            yield frame
        else:
            break
    video.release()
    yield None
for f in get_frames(VFILE):
    if f is None:
        break
    cv2.imshow('frame', f)
    # Hit Escape to stop
    if cv2.waitKey(10) == 27:
        break
    
cv2.destroyAllWindows()
def get_frame(filename, index):
    counter = 0
    video = cv2.VideoCapture(filename)
    while video.isOpened():
        ret, frame = video.read()
        if ret:
            if counter == index:
                return frame
            counter += 1
        else:
            break
    video.release()
    return None
frame = get_frame(VFILE, 80)
print('shape', frame.shape)

# Examine pixel at 0,0
print('pixel at (0,0) ', frame[0,0,:])

plt.imshow(frame)
fix_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

# Examine pixel at 0,0
print('pixel at (0,0) ', fix_frame[0,0,:])
plt.imshow(fix_frame)
# Process all video frames
counter = 0
for frame in get_frames(VFILE):
    if frame is None:
        break
    # Add counter
    cv2.putText(frame, 
                text=str(counter), 
                org=(100,100), 
                fontFace=cv2.FONT_HERSHEY_SIMPLEX, 
                fontScale=1, 
                color=(0,255,0),
                thickness=3)
    cv2.imshow('frame', frame)
    
    # Hit Escape to stop
    if cv2.waitKey(10) == 27:
        break
    counter += 1
    
cv2.destroyAllWindows()

# Process all video frames
counter = 0
for frame in get_frames(VFILE):
    if frame is None:
        break
    # Add counter
    cv2.putText(frame, 
                text=str(counter), 
                org=(100,100), 
                fontFace=cv2.FONT_HERSHEY_SIMPLEX, 
                fontScale=1, 
                color=(0,255,0),
                thickness=3)
#    cv2.imshow('frame', frame)
    
    # Hit Escape to stop
#    if cv2.waitKey(10) == 27:
#        break
    video_out.write(frame)
    counter += 1
video_out.release()
# Get number of frames (requires codec support)
video = cv2.VideoCapture(VFILE)
frame_count = int(video.get(cv2.CAP_PROP_FRAME_COUNT))
video.release()
print('frame count ', frame_count)
COLLAGE_ROWS = 3
COLLAGE_COLS = 5

collage_num_images = COLLAGE_ROWS * COLLAGE_COLS
skip_frames = frame_count // collage_num_images

frames = []
counter = 0
for f in get_frames(VFILE):
    if counter % skip_frames == 0:
        frames.append(f)
    counter += 1
    
row1 = np.concatenate( frames[0:5], axis=1)
row2 = np.concatenate( frames[5:10], axis=1)
row3 = np.concatenate( frames[10:15], axis=1)
collage = np.concatenate( (row1, row2, row3), axis=0) 
collage = cv2.cvtColor(collage, cv2.COLOR_BGR2RGB)
plt.imshow(collage) 
